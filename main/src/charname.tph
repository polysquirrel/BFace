/**********************************************************************************************
 * Library containing functions for installing (or removing) portraits for player characters. *
 *********************************************************************************************/

	
	
	

/** This is a very light wrapper over `copy_npc_portraits` providing default arguments for
  * names of directories in the pc portrait tree. The user will not be asked to pick between alternatives.
  * Sets `role = ~charname~`, group (game) = ~unique~, gender = `male|female` and when = ~always~ by default; 
  * all other parameters have the same default values as in copy_npc_portraits. All given parameters are passed on 
  * verbatim to copy_npc_portraits; similarly, the values returned by that function are returned without 
  * any modification. See `copy_npc_portraits` documentation.
  */  
DEFINE_ACTION_FUNCTION copy_pc_portraits
	INT_VAR
		list_only = 0
	STR_VAR
		role = ~unique~
		bundle = ~*~
		gender = ~male\|female~
		name = ~*~
		target = ~override~
		when = ~always~
		include = ~*~
		exclude = ~~
	RET
		npccount
		filelist
		names
	RET_ARRAY
		filemap
	BEGIN
		ACTION_IF ~%bundle%~ STR_EQ ~*~ THEN BEGIN
			OUTER_TEXT_SPRINT bundle ~%any_dir%~ //default value required to avoid using current game dir instead
		END	
		LAF copy_npc_portraits 
			INT_VAR 
				list_only = list_only 
				defaults = 1
			STR_VAR 
				root = ~charname~
				role = ~%role%~ 
				game = ~%bundle%~ 
				gender = ~%gender%~
				name = ~%name%~ 
				target = ~%target%~
				when = ~%when%~
				include = ~%include%~
				exclude = ~%exclude%~
			RET npccount filelist names
			RET_ARRAY filemap END
	END


	



DEFINE_ACTION_MACRO copy_chosen_pc_portrait_sets BEGIN
	LAF copy_pc_portraits STR_VAR gender = ~male~ name = ~%chosen_pc_portrait_sets%~ RET filelist END
	OUTER_TEXT_SPRINT male_portrait_list ~%male_portrait_list%%filelist%~
	
	LAF copy_pc_portraits STR_VAR gender = ~female~ name = ~%chosen_pc_portrait_sets%~ RET filelist END
	OUTER_TEXT_SPRINT male_portrait_list ~%male_portrait_list%%filelist%~
END	
	
	
	
	
	

/** Iterates over all bundles under the 'charname/unique' directory which mach the %bundle% regexp
  * and asks the user if it should be installed. Additionally, if %show_previews% is true, a browser
  * window with a preview gallery for each bundle will be opened. Only portraits from the given gender
  * and portrait sets are installed, regardless of positive decision.
  */
DEFINE_ACTION_FUNCTION copy_pc_bundles
	INT_VAR 
		show_previews = 0
	STR_VAR 
		bundle = ~*~
		gender = ~male\|female~
		name = ~*~
		exclude = ~~
	RET
		males
		females
	BEGIN
		ACTION_IF ~%bundle%~ STR_EQ ~*~ THEN BEGIN
			OUTER_TEXT_SPRINT bundle ~%any_dir%~
		END
		
		OUTER_TEXT_SPRINT males ~~
		OUTER_TEXT_SPRINT females ~~
		
		GET_DIRECTORY_ARRAY bundles ~%MOD_FOLDER%/charname/unique~ ~%bundle%~
		
		ACTION_PHP_EACH bundles AS _ => bundledir BEGIN 
			LAF strip_prefix STR_VAR string = ~%bundledir%~ prefix = ~%MOD_FOLDER%/charname/unique/~
				RET bundle = suffix END

			ACTION_IF show_previews THEN BEGIN
				LAF create_portraits_preview
					STR_VAR 
						root = ~charname~ role = ~unique~ game = ~%bundle%~ gender = ~%gender%~ name = ~%name%~
						previewdir = ~%bundledir%~ exclude = ~%exclude%~ when = ~always~
					RET empty = empty END
				
				ACTION_IF NOT empty THEN BEGIN
					AT_INTERACTIVE_NOW ~VIEW %bundledir%/preview.html~
				END
			END ELSE BEGIN
				LAF list_npc_portraits
					STR_VAR 
						root = ~charname~ role = ~unique~ game = ~%bundle%~ gender = ~%gender%~ name = ~%name%~
						exclude = ~%exclude%~ when = ~always~
					RET empty = npccount END
					OUTER_SET empty = NOT empty
			END

			ACTION_IF NOT empty THEN BEGIN
				OUTER_SPRINT prompt_prefix @030
				OUTER_SPRINT prompt_suffix @031
				OUTER_TEXT_SPRINT decision ~~

				OUTER_WHILE NOT (~%decision%~ STRING_EQUAL_CASE ~I~ OR ~%decision%~ STRING_EQUAL_CASE ~N~) BEGIN
					PRINT ~%prompt_prefix%%bundle%%prompt_suffix%~
					ACTION_READLN decision
				END
				
				ACTION_IF ~%decision%~ STRING_EQUAL_CASE ~I~ THEN BEGIN
					ACTION_IF NOT ~%gender%~ STRING_CONTAINS_REGEXP ~male~ THEN BEGIN
						LAF copy_pc_portraits 
							STR_VAR bundle = ~%bundle%~ gender = ~male~ name = ~%name%~ exclude = ~%exclude%~
							RET filelist END
						OUTER_TEXT_SPRINT males ~%males%%filelist%~
					END
					ACTION_IF NOT ~%gender%~ STRING_CONTAINS_REGEXP ~female~ THEN BEGIN
						LAF copy_pc_portraits 
							STR_VAR bundle = ~%bundle%~ gender = ~female~ name = ~%name%~ exclude = ~%exclude%~
							RET filelist END
						OUTER_TEXT_SPRINT females ~%females%%filelist%~
					END
				END
			END
		END
	END

	
	
	
	
	

/** Parses BGEE.LUA to read the names of portraits currently available during character generation.
  * Note that the names returned may not match portrait files directly, but instead be a common prefix
  * of a matching portrait set (that is, `/Anomen/` instead of `/AnomenL//AnomenM/`).
  */
DEFINE_ACTION_FUNCTION list_pc_selection
	STR_VAR
		gender = ~male\|female~
		exclude = ~~
		include = ~*~
	RET
		filelist
	BEGIN
		OUTER_TEXT_SPRINT sex  ~[12]~
		ACTION_IF ~%gender%~ STR_EQ ~male~ THEN BEGIN
			OUTER_TEXT_SPRINT sex ~1~
		END ELSE ACTION_IF ~%gender%~ STR_EQ ~female~ THEN BEGIN
			OUTER_TEXT_SPRINT sex ~2~
		END
		
		OUTER_TEXT_SPRINT filelist ~~
		//let's get rid of commented lines in bgee.lua which fool the regexp matcher
		COPY_EXISTING ~BGEE.LUA~ ~%empty_dir%~
			REPLACE_TEXTUALLY CASE_SENSITIVE EVALUATE_REGEXP ~--.*$~ ~%WNL%~
		
		COPY ~%empty_dir%/BGEE.LUA~ ~%empty_dir%~
			REPLACE_EVALUATE CASE_SENSITIVE ~\({[%WS%]*'\([^'\\/]+\)'[%WS%]*,[%WS%]*%sex%[%WS%]*}\)~ BEGIN
				TEXT_SPRINT portrait ~%MATCH2%~
				SET included = INDEX(CASE_INSENSITIVE EVALUATE_REGEXP ~/%portrait%L?/~ ~%include%~)
				SET excluded = INDEX(CASE_INSENSITIVE EXACT_MATCH ~/%portrait%L?/~ ~%exclude%~)
				PATCH_IF ((~%include%~ STR_EQ ~*~) OR included >= 0) AND (excluded < 0) THEN BEGIN
					PATCH_IF included >= 0 THEN BEGIN
						SET length = STRING_LENGTH ~%portrait%~
						SET large = INDEX(CASE_INSENSITIVE EXACT_MATCH ~/%portrait%L/~ ~%include%~)
						PATCH_IF large >= 0 THEN BEGIN 
							SET included = large
							SET length += 1
						END
						SET included += 1
						LPF SUBSTRING 
							INT_VAR start = included length = length
							STR_VAR string = ~%include%~ 
							RET portrait = substring END
					END 
					TEXT_SPRINT filelist ~%filelist%/%portrait%/~
				END
			END ~%MATCH1%~
		BUT_ONLY_IF_IT_CHANGES
		
		DELETE ~%empty_dir%/BGEE.LUA~
	END
	
	
	

	
	
/** Removes all portraits from the selection list present on character generation.
  * This will crash the game if no new portraits are installed!
  * Patches BGEE.LUA file to clear the portraits = { ... } list. 
  */
DEFINE_ACTION_FUNCTION clear_pc_selection
	BEGIN
		LOG ~Removing all portraits from the list at character generation. The game will crash unless new portraits are installed.~
		ACTION_IF NOT DIRECTORY_EXISTS ~override~ THEN BEGIN
			MKDIR ~override~
		END
		COPY_EXISTING ~BGEE.LUA~ ~override~
			REPLACE_TEXTUALLY CASE_SENSITIVE EVALUATE_REGEXP ~^portraits =[^{]*{[^{}]*\({[^}]*}[^{}]*\)*}~ 
				~portraits = %WNL%{%WNL%}~
	END




	
/** Removes entries for given portrait files from the selection list on character generation.
  * The file list must be a concatenated sequence of names without the '.bmp' suffix and each surrounded
  * by an individual pair of '/' - as returned by `copy_npc_portraits` function.
  */
DEFINE_ACTION_FUNCTION remove_pc_portraits
	STR_VAR
		files = ~~
	BEGIN
		ACTION_IF NOT DIRECTORY_EXISTS ~override~ THEN BEGIN
			MKDIR ~override~
		END
		LOG ~Removing portraits from the selection screen: %files%~
		LAF split_file_list STR_VAR list = files RET_ARRAY names = elements END
		ACTION_PHP_EACH names AS _ => name BEGIN
			COPY_EXISTING ~BGEE.LUA~ ~override~
				//three cases, depending on whether the file is the only, first, or in the middle of the list
				REPLACE_TEXTUALLY CASE_INSENSITIVE EVALUATE_REGEXP ~{[^{}]*'%name%'[^{}]*},~ ~~
				REPLACE_TEXTUALLY CASE_INSENSITIVE EVALUATE_REGEXP ~,[^{}]*{[^{}]*'%name%'[^{}]*}~ ~~
				REPLACE_TEXTUALLY CASE_INSENSITIVE EVALUATE_REGEXP ~{[^{}]*'%name%'[^{}]*}~ ~~
			BUT_ONLY_IF_IT_CHANGES
		END
	END
	
	
	
	
	
/** Resolves the names of portrait files to copy based on exact same parameters and rules as
  * `copy_npc_portraits`, but doesn't copy (or delete) anything. Instead, it removes any
  * references to these files from the portrait selection list in the character generation screen.
  */
DEFINE_ACTION_FUNCTION remove_npc_portraits
	STR_VAR
		role = ~canonnpcs~
		game = ~*~
		gender = ~male\|female~
		name = ~*~
		exclude = ~~
	RET
		filelist
	BEGIN
		ACTION_IF ~%game%~ STR_EQ ~*~ THEN BEGIN
			OUTER_TEXT_SPRINT game ~%any_game%~
		END
		LOG ~Listing companion portraits to remove: %role%/%game%/%gender%/%name%~
		LAF list_npc_portraits 
			STR_VAR role = ~%role%~ game = ~%game%~ gender = ~%gender%~ name = ~%name%~ 
			        when = ~exists~ exclude = ~%exclude%~
			RET filelist END
	
		LAF remove_pc_portraits STR_VAR files = filelist END
	END
	
	
	
	
	
	
	
	
/** Translates the given list of portraits into a string injectable to BGEE.LUA. */
DEFINE_ACTION_FUNCTION pc_portrait_entries
	STR_VAR
		gender = ~~
		filelist = ~~
	RET
		portraits
	BEGIN
		ACTION_MATCH ~%gender%~	WITH 
			~male~ ~Male~ ~MALE~ ~M~ ~m~ BEGIN
				OUTER_SET pc_gender = 1
			END
			~female~ ~Female~ ~FEMALE~ ~F~ ~f~ BEGIN
				OUTER_SET pc_gender = 2
			END
			DEFAULT
				FAIL ~Unrecognized gender: %gender%~
		END

		OUTER_INNER_PATCH_SAVE portraits ~%filelist%~ BEGIN
			REPLACE_EVALUATE CASE_SENSITIVE ~/\([^/\\]+\)/~ BEGIN
			END ~	{'%MATCH1%', %pc_gender%},
~
		END
		OUTER_INNER_PATCH_SAVE portraits ~%portraits%~ BEGIN //remove trailing ','
			REPLACE_TEXTUALLY CASE_SENSITIVE EVALUATE_REGEXP ~,[^{}]*$^$~ ~~
		END		
	END
	
	



/** Installs the given portrait list in the player selection screen for EE games.
  */
DEFINE_ACTION_FUNCTION install_pc_portrait_list
	INT_VAR
		/** If non-zero, portrait pairs 'L' and 'M' on the list are replaced with their common name prefix. */
		multi_size = 1
		/** If non-zero, instead of simply prepending the list to the existing selection, the latter is read,
		  * sorted together with the new portraits, duplicate entries removed and the current list is replaced
		  * the result of the merge. */
		merge = 0
	STR_VAR
		/** Gender of the portrayed characters determining the list into which portraits are installed.
		    Must be either 'M' or 'F'. */
		gender = ~?~
		/** The list of portrait files to installed, each without an extension and surrounded by a pair of '/' chars. */	
		filelist = ~~
	BEGIN
		ACTION_IF ~%filelist%~ STR_EQ ~~ THEN BEGIN
			ACTION_IF NOT merge THEN BEGIN
				WARN ~Can't replace the portrait selection with an empty list!~
			END
		END ELSE BEGIN
			ACTION_IF merge THEN BEGIN
				LAF list_pc_selection STR_VAR gender = ~%gender%~ RET current = filelist END
				OUTER_TEXT_SPRINT filelist ~%filelist%%current%~
				LAF clear_pc_selection END
			END
			ACTION_IF multi_size THEN BEGIN
				LAF multi_size_list STR_VAR list = ~%filelist%~ 
					RET filelist = list END
			END
			LAF remove_duplicates STR_VAR list = ~%filelist%~ 
				RET filelist = unique END
			
			LAF pc_portrait_entries STR_VAR gender = ~%gender%~ filelist = ~%filelist%~
				RET selection = portraits END

			LOG ~Updating portrait selection with portraits:~
			LOG ~%selection%~
			
			ACTION_IF NOT (~%selection%~ STRING_EQUAL ~~) THEN BEGIN
				LOG ~Patching BGEE.LUA; no files modified here signifies a conflict with another module.~
				//Patch portrait selection list if it's not empty
				COPY_EXISTING ~BGEE.LUA~ ~override~ 
					REPLACE_TEXTUALLY CASE_SENSITIVE EVALUATE_REGEXP ~^portraits =[^{}]*{~
						~portraits = %WNL%{%WNL%%selection%,~
				IF ~^portraits =[^{}]*{[^{}]*\({[^{}]*}[^{}]*\)+}~
			

				//Patch portrait selection list if it's empty
				COPY_EXISTING ~BGEE.LUA~ ~override~ //
					REPLACE_TEXTUALLY CASE_SENSITIVE EVALUATE_REGEXP ~^portraits =[^{}]*{[^{}]*}~ 
						~portraits = %WNL%{%WNL%%selection%%WNL%}~
				IF ~^portraits =[^{}]*{[^{}]*}~
			END		
		END
	END
	
	
	
	
	
	
/** Copies bmp files from the specified branches of a portrait directory tree using copy_npc_portraits
  * and updates BGEE.LUA to add the new portraits to the selection list for both playable sexes.
  * The 'gender' directories in the tree must be named 'male' and 'female', the names of directories 
  * on all other levels are completely optional. Only the root level argument (corresponding to 'role'
  * for npc portraits) must be specified; the rest will default to all directories.
  */
DEFINE_ACTION_FUNCTION install_pc_portraits 
	STR_VAR
		role = ~unique~
		bundle = ~*~
		set = ~*~
		exclude = ~~
		when = ~always~
	BEGIN
		ACTION_IF ~%bundle%~ STR_EQ ~*~ THEN BEGIN
			OUTER_TEXT_SPRINT bundle ~%any_dir%~
		END
		LAF copy_npc_portraits 
			INT_VAR defaults = 1
			STR_VAR 
				root = ~charname~
				role = ~%role%~ 
				game = ~%bundle%~ 
				gender = ~male~ 
				name = ~%set%~ 
				exclude = ~%exclude%~ 
				when = ~%when%~
			RET males = filelist END
			
		LAF copy_npc_portraits 
			INT_VAR defaults = 1
			STR_VAR 
				root = ~charname~
				role = ~%role%~ 
				game = ~%bundle%~ 
				gender = ~female~ 
				name = ~%set%~ 
				exclude = ~%exclude%~ 
				when = ~%when%~
			RET females = filelist END
			
		LAF install_pc_portrait_list STR_VAR gender = ~male~ filelist = ~%males%~ END
		LAF install_pc_portrait_list STR_VAR gender = ~female~ filelist = ~%females%~ END
	END
	
	
	
	