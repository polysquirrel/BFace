#!/bin/sh



if [[ "$#" == 0 || "$1" == '-h' || "$1" == '--help' ]]; then
    echo "Renames all files matching the given pattern."
    echo "Usage:"
    echo "  $0 <from> <to> [dir]*"
    echo ""
    echo "    <from>: a pattern consisting of any characters and bash wildcard symbols"
    echo "            ? and *."
    echo "    <to>:   another pattern with as many wildcard symbols and in the same order"
    echo "            as <from>."
    echo ""
    echo "Searches all the directories given as arguments 3 and following for files"
    echo "a bash pattern given as the first argument. If no directories are given, current"
    echo "directory is used. Matching files are renamed according to the pattern given as"
    echo "the second argument. Each name fragment matching a wildcard in the first"
    echo "pattern is left unchanged, while the fixed fragment of the first pattern"
    echo "between wildcards i and i+1 are matched to the fixed fragments of the second"
    echo "pattern between wildcards i and i+1. For the purpose of this definition only"
    echo "it is assumed that the patterns start and end with a wildcard."

else 
    pattern=`echo "$1" | sed -e "s|\*|\\\\\(.*\\\\\)|g" -e "s|\?|\\\\\(.\\\\\)|g"`
    target="$2"
    
    for i in `seq 1 9`; do
	expr="s|[?*]|\\\\"
        target=`echo "$target" | sed -e "$expr$i|"`
    done
    echo "$pattern -> $target"

    if [[ "$#" == 2 ]]; then
        find -name "$1" -print0 | while IFS= read -r -d '' file; do
            dst=`echo "$file" | sed -e "s|$pattern$|$target|"`
            mv -i -v "$file" "$dst"
        done
    else
        for i in `seq 3 $#`; do
            find -name "$1" -print0 | while IFS= read -r -d '' file; do
                dst=`echo "$file" | sed -e "s|$pattern$|$target|"`
		mv -i -v "$file" "$dst"
            done
	done
    fi
fi

